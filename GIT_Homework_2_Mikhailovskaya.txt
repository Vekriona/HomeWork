GIT Homework 2
Group 26
Mikhailovskaya Irina

1. На локальном репозитории сделать ветки для:
- Postman
- Jmeter
- CheckLists
- Bug Reports
- SQL
- Charles
- Mobile testing
git branch Postman
git branch Jmeter
git branch CheckLists
git branch Bug_Reports
git branch SQL
git branch Charles
git branch Mobile_testing
2. Запушить все ветки на внешний репозиторий:
git push -u origin Postman
git push -u origin Jmeter
git push -u origin CheckLists
git push -u origin Bug_Reports
git push -u origin SQL
git push -u origin Charles
git push -u origin Mobile_testing
3. В ветке Bug Reports сделать текстовый документ со структурой баг репорта:
	1) перейти в ветку Bug_Reports - git checkout Bug_Reports
	2) touch bug_report.txt
	3) vim bug_report.txt
	4) захожу в режим INSERT нажав на клавиатре i
	5) ввожу текст:
Короткое описание (Summary): короткое описание проблемы, явно указывающее на причину и тип ошибки.
Проект (Project): название тестируемого проекта.
Компонент приложения: Название части или функции тестируемого продукта.
Номер версии (Version): версия, на которой была найдена ошибка.
Серьезность (Severity): 
S1 Блокирующий (Blocker)
S2 Критический (Critical)
S3 Значительный (Major)
S4 Незначительный (Minor)
S5 Тривиальный (Trivial)
Приоритет (Priority): 
P1 Высокий (High)
P2 Средний (Medium)
P3 Низкий (Low)
Статус (Status): статус бага. Зависит от используемой процедуры и жизненного цикла бага.
Автор (Author): создатель баг-репорта.
Назначен на (Assigned To): имя сотрудника, назначенного на решение проблемы.
Окружение (ОС / Сервис Пак и т.д. / Браузера + версия / ...): Информация об окружении, на котором был найден баг: операционная система, сервис-пак, для WEB-тестирования – имя и версия браузера и т.д.
Описание:
Шаги воспроизведения (Steps to Reproduce): шаги, по которым можно легко воспроизвести ситуацию, приведшую к ошибке.
Фактический Результат (Actual Result): результат, полученный после прохождения шагов к воспроизведению.
Ожидаемый результат (Expected Result): ожидаемый правильный результат.
Дополнения:
Прикрепленный файл (Attachment): Файл с логами, скриншот или любой другой документ, который может помочь прояснить причину ошибки или указать на способ решения.
	6) для выхода из режима редактирования нажимаю esc
	7) для сохраниения файла и выхода ввожу команду - :wq
4. Запушить структуру багрепорта на внешний репозиторий:
	1) git add bug_report.txt
	2) git commit -m "add bug report in bug_report.txt"
	3) git push
5. Вмержить ветку Bug Reports в Main:
	1) git checkout main
	2) git merge Bug_Reports
6. Запушить main на внешний репозиторий - git push
7. В ветке CheckLists набросать структуру чек листа:
	1) git checkout Checklists
	2) touch checklists.txt
	3) захожу в режим INSERT нажав на клавиатре i
	4) ввожу текст:
Список проверок (с требуемой степенью детализации);
Статус проверок (сборка, на которой проводилось тестирование; тестовое окружение(если применимо);тестировщик);
Результат проверки (пройден, провален, заблокирован).
	6) для выхода из режима редактирования нажимаю esc
	7) для сохраниения файла и выхода ввожу команду - :wq
8. Запушить структуру на внешний репозиторий:
	1) git add checklists.txt
	2) git commit -m "add checklist in checklists.txt"
	3) git push
9. На внешнем репозитории сделать Pull Request ветки CheckLists в main 
10. Синхронизировать Внешнюю и Локальную ветки Main - git pull